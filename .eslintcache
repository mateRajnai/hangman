[{"/home/mate/Advanced/hangman/src/index.js":"1","/home/mate/Advanced/hangman/src/App.js":"2","/home/mate/Advanced/hangman/src/components/Game.js":"3","/home/mate/Advanced/hangman/src/components/SideBar.js":"4","/home/mate/Advanced/hangman/src/components/Drawing.js":"5","/home/mate/Advanced/hangman/src/components/SideBarToggler.js":"6","/home/mate/Advanced/hangman/src/components/WrongLetters.js":"7","/home/mate/Advanced/hangman/src/components/CorrectLetters.js":"8","/home/mate/Advanced/hangman/src/components/GuessedLetter.js":"9","/home/mate/Advanced/hangman/src/context/LettersContext.js":"10","/home/mate/Advanced/hangman/src/components/CorrectLetter.js":"11","/home/mate/Advanced/hangman/src/components/WrongLetter.js":"12","/home/mate/Advanced/hangman/src/context/GameContext.js":"13","/home/mate/Advanced/hangman/src/components/GameEndingFeedback.js":"14","/home/mate/Advanced/hangman/src/context/VocabularyContext.js":"15"},{"size":176,"mtime":1607525992777,"results":"16","hashOfConfig":"17"},{"size":699,"mtime":1608023437246,"results":"18","hashOfConfig":"17"},{"size":1429,"mtime":1607957890743,"results":"19","hashOfConfig":"17"},{"size":1498,"mtime":1608017525590,"results":"20","hashOfConfig":"17"},{"size":2598,"mtime":1607956484086,"results":"21","hashOfConfig":"17"},{"size":712,"mtime":1608017525606,"results":"22","hashOfConfig":"17"},{"size":632,"mtime":1607691329863,"results":"23","hashOfConfig":"17"},{"size":976,"mtime":1608019254903,"results":"24","hashOfConfig":"17"},{"size":1247,"mtime":1607694562475,"results":"25","hashOfConfig":"17"},{"size":2411,"mtime":1608021114630,"results":"26","hashOfConfig":"17"},{"size":377,"mtime":1608024714983,"results":"27","hashOfConfig":"17"},{"size":284,"mtime":1607689060737,"results":"28","hashOfConfig":"17"},{"size":784,"mtime":1608023873603,"results":"29","hashOfConfig":"17"},{"size":1534,"mtime":1608023875915,"results":"30","hashOfConfig":"17"},{"size":1483,"mtime":1608024524734,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"j4h2dx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/mate/Advanced/hangman/src/index.js",[],["68","69"],"/home/mate/Advanced/hangman/src/App.js",[],"/home/mate/Advanced/hangman/src/components/Game.js",[],"/home/mate/Advanced/hangman/src/components/SideBar.js",[],"/home/mate/Advanced/hangman/src/components/Drawing.js",["70"],"import React, {useContext, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {LettersContext} from '../context/LettersContext';\nimport {GameContext} from '../context/GameContext';\n\n\n\nconst Drawing = () => {\n\n    const {wrongLetters, isLastlyGuessedLetterWrong} = useContext(LettersContext);\n    const {isEndOfGame, setIsEndOfGame} = useContext(GameContext);\n    const [indexOfDrawingParts, setIndexOfDrawingParts] = useState(0);\n    const drawingParts = document.getElementsByClassName(\"drawing-part\");\n    \n\n    useEffect(() => {\n        if (!isEndOfGame && isLastlyGuessedLetterWrong) {\n            drawingParts[indexOfDrawingParts].classList.add(\"draw\");\n            if (drawingParts[indexOfDrawingParts + 1] === undefined) {\n                setIsEndOfGame(true);\n                \n            } else {\n                setIndexOfDrawingParts(index => index + 1);\n            }\n        }\n    }, [wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame])\n\n    return <StyleWrapper id=\"drawing\" className=\"styled-div\">\n                <svg height=\"250\" width=\"100%\" id=\"drawing-parts\">\n                    <g id=\"gallows\">\n                        <line x1=\"10\" y1=\"230\" x2=\"270\" y2=\"230\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"230\" x2=\"100\" y2=\"20\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"20\" x2=\"200\" y2=\"20\" className=\"drawing-part\"/>\n                        <line id=\"rope\" x1=\"200\" y1=\"20\" x2=\"200\" y2=\"60\" className=\"drawing-part\"/>\n                    </g>\n                    <g id=\"body\">\n                        <circle cx=\"200\" cy=\"80\" r=\"20\" stroke=\"white\" strokeWidth=\"4\" fill=\"white\" className=\"drawing-part\"/>\n                        <line x1=\"200\" y1=\"100\" x2=\"200\" y2=\"150\" className=\"drawing-part\"/>\n                        <line id=\"armL\" x1=\"200\" y1=\"120\" x2=\"170\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"armR\" x1=\"200\" y1=\"120\" x2=\"230\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"legL\" x1=\"200\" y1=\"150\" x2=\"180\" y2=\"190\" className=\"drawing-part\"/>\n                        <line id=\"legR\" x1=\"200\" y1=\"150\" x2=\"220\" y2=\"190\" className=\"drawing-part\"/>\n                    </g>\n                </svg>\n    </StyleWrapper>\n}\n\nexport default Drawing;\n\nconst StyleWrapper = styled.div`\n    flex: 5;\n\n    svg {\n        margin: 0 auto;\n        border: 1px solid white;\n    }\n\n    line {\n    stroke: white;\n    stroke-width: 4;\n    }\n\n    .drawing-part {\n        visibility: hidden;\n    }\n\n    .draw {\n        visibility: visible;\n    }\n`;","/home/mate/Advanced/hangman/src/components/SideBarToggler.js",["71"],"import React, {useContext, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {SideBarContext} from \"../context/SideBarContext\";\n\nconst SideBarToggler = () => {\n\n    const {toggleSideBar, sideBarIsCollapsed} = useContext(SideBarContext);\n\n\n    return (\n    <StyleWrapper id=\"side-bar-toggler\" className=\"styled-div\">\n        <button type=\"button\" onClick={toggleSideBar}>\n            {sideBarIsCollapsed ? \"Show vocabularies\" : \"Hide vocabularies\"}\n            </button>\n    </StyleWrapper>\n    )\n}\n\nexport default SideBarToggler;\n\nconst StyleWrapper = styled.div`\n    flex: 1;\n    button {\n        width: 25%;\n        min-width: 94px;\n        height: 70%;\n    }\n`;","/home/mate/Advanced/hangman/src/components/WrongLetters.js",[],"/home/mate/Advanced/hangman/src/components/CorrectLetters.js",["72"],"import React, {useContext, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {LettersContext} from '../context/LettersContext';\nimport {GameContext} from '../context/GameContext';\nimport CorrectLetter from './CorrectLetter';\nimport {v4 as uuidv4} from 'uuid';\n\nconst CorrectLetters = () => {\n\n    const {correctLetters} = useContext(LettersContext);\n    const {setIsEndOfGame, setIsPlayerWon} = useContext(GameContext);\n\n    useEffect(() => {\n        if (!correctLetters.includes(null) && correctLetters.length !== 0) {\n            setIsEndOfGame(true);\n            setIsPlayerWon(true);\n        }\n    }, [correctLetters])    \n    \n\n    return (\n    <StyleWrapper id=\"correct-letters\" className=\"styled-div\">\n        {correctLetters.map(letter => \n            <CorrectLetter key={uuidv4()} letter={letter}/> \n            )}  \n    </StyleWrapper>\n    )\n}\n\nexport default CorrectLetters;\n\nconst StyleWrapper = styled.div`\n    flex: 4;\n    display: flex;\n`;","/home/mate/Advanced/hangman/src/components/GuessedLetter.js",[],"/home/mate/Advanced/hangman/src/context/LettersContext.js",["73"],"import React, {useState, useEffect, useContext} from 'react';\nimport {VocabularyContext} from './VocabularyContext';\n\nexport const LettersContext = React.createContext();\n\nexport const LettersProvider = (props) => {\n\n    const {generatedWord} = useContext(VocabularyContext);\n\n    const [correctLetters, setCorrectLetters] = useState([]);\n    const [wrongLetters, setWrongLetters] = useState([]);\n    const [isLastlyGuessedLetterWrong, setIsLastlyGuessedLetterWrong] = useState();\n\n    const checkGuessedLetterWasAlreadyGuessed = (e) => {\n        const guessedLetter = e.target.getAttribute(\"data-guessed-letter\");\n        console.log(guessedLetter);\n        const isAlreadyGuessed = wrongLetters.includes(guessedLetter) || correctLetters.includes(guessedLetter);\n        if (!isAlreadyGuessed) \n            saveGuessedLetter(guessedLetter);\n    }\n\n\n    const saveGuessedLetter = (guessedLetter) => {\n        let guessedLetterIsWrong = true;\n        let correctLettersToBeUpdated = [...correctLetters];\n        for (let i = 0; i < generatedWord.length; i++) {\n            if (generatedWord.charAt(i) === guessedLetter) {\n                correctLettersToBeUpdated[i] = generatedWord.charAt(i);\n                guessedLetterIsWrong = false;\n            }\n        }\n        if (guessedLetterIsWrong) {\n            setWrongLetters([...wrongLetters, guessedLetter]);\n            setIsLastlyGuessedLetterWrong(true);  \n        } else {\n            setCorrectLetters(correctLettersToBeUpdated);\n            setIsLastlyGuessedLetterWrong(false);\n        }\n    }\n\n    useEffect(() => {\n        let correctLettersInitialization = [];\n        for (let i = 0; i < generatedWord.length; i++) {\n            correctLettersInitialization[i] = null;\n        }\n        console.log(\"LETTERS CONTEXT\")\n        console.log(correctLetters)\n        setCorrectLetters(correctLettersInitialization)\n        console.log(\"----------\")\n        \n    }, [generatedWord])\n\n\n    useEffect(() => {\n        console.log(generatedWord);\n        console.log(wrongLetters)\n        console.log(correctLetters)\n    }, [correctLetters, wrongLetters, generatedWord])\n\n\n    return (\n        <LettersContext.Provider value={{\n            checkGuessedLetterWasAlreadyGuessed,\n            correctLetters,\n            wrongLetters,\n            isLastlyGuessedLetterWrong\n        }} >\n            {props.children}\n        </LettersContext.Provider>\n    );\n};\n","/home/mate/Advanced/hangman/src/components/CorrectLetter.js",[],"/home/mate/Advanced/hangman/src/components/WrongLetter.js",[],"/home/mate/Advanced/hangman/src/context/GameContext.js",["74"],"import React, {useEffect, useState, useContext} from 'react';\nimport {VocabularyContext} from './VocabularyContext';\n\nexport const GameContext = React.createContext();\n\nexport const GameProvider = (props) => {\n\n    const [isEndOfGame, setIsEndOfGame] = useState(false);\n    const [isPlayerWon, setIsPlayerWon] = useState(false);\n    const {generateWord} = useContext(VocabularyContext);\n\n    const startNewGame = (e) => {\n        setIsEndOfGame(false);\n        setIsPlayerWon(false);\n        generateWord(e);\n    }\n\n    return (\n        <GameContext.Provider value={{\n            isEndOfGame,\n            setIsEndOfGame, \n            isPlayerWon, \n            setIsPlayerWon,\n            startNewGame\n        }}>\n            {props.children}\n        </GameContext.Provider>\n    );\n};\n","/home/mate/Advanced/hangman/src/components/GameEndingFeedback.js",[],"/home/mate/Advanced/hangman/src/context/VocabularyContext.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":26,"column":8,"nodeType":"81","endLine":26,"endColumn":63,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":37},{"ruleId":"79","severity":1,"message":"87","line":18,"column":8,"nodeType":"81","endLine":18,"endColumn":24,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":51,"column":8,"nodeType":"81","endLine":51,"endColumn":23,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":16,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'drawingParts', 'indexOfDrawingParts', and 'setIsEndOfGame'. Either include them or remove the dependency array.","ArrayExpression",["93"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'setIsEndOfGame' and 'setIsPlayerWon'. Either include them or remove the dependency array.",["94"],"React Hook useEffect has a missing dependency: 'correctLetters'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, drawingParts, indexOfDrawingParts, setIsEndOfGame]",{"range":"102","text":"103"},"Update the dependencies array to be: [correctLetters, setIsEndOfGame, setIsPlayerWon]",{"range":"104","text":"105"},"Update the dependencies array to be: [correctLetters, generatedWord]",{"range":"106","text":"107"},[928,983],"[wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, drawingParts, indexOfDrawingParts, setIsEndOfGame]",[627,643],"[correctLetters, setIsEndOfGame, setIsPlayerWon]",[1924,1939],"[correctLetters, generatedWord]"]