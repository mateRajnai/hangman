[{"/home/mate/Advanced/hangman/src/index.js":"1","/home/mate/Advanced/hangman/src/App.js":"2","/home/mate/Advanced/hangman/src/components/Game.js":"3","/home/mate/Advanced/hangman/src/components/Drawing.js":"4","/home/mate/Advanced/hangman/src/components/WrongLetters.js":"5","/home/mate/Advanced/hangman/src/components/CorrectLetters.js":"6","/home/mate/Advanced/hangman/src/components/GuessedLetter.js":"7","/home/mate/Advanced/hangman/src/context/LettersContext.js":"8","/home/mate/Advanced/hangman/src/components/CorrectLetter.js":"9","/home/mate/Advanced/hangman/src/components/WrongLetter.js":"10","/home/mate/Advanced/hangman/src/context/GameContext.js":"11","/home/mate/Advanced/hangman/src/components/GameEndingFeedback.js":"12","/home/mate/Advanced/hangman/src/context/VocabularyContext.js":"13","/home/mate/Advanced/hangman/src/components/Vocabulary.js":"14","/home/mate/Advanced/hangman/src/components/Header.js":"15","/home/mate/Advanced/hangman/src/components/Content.js":"16"},{"size":176,"mtime":1607525992777,"results":"17","hashOfConfig":"18"},{"size":890,"mtime":1608121591105,"results":"19","hashOfConfig":"18"},{"size":1351,"mtime":1608122262163,"results":"20","hashOfConfig":"18"},{"size":3050,"mtime":1608193153319,"results":"21","hashOfConfig":"18"},{"size":692,"mtime":1608123665189,"results":"22","hashOfConfig":"18"},{"size":1030,"mtime":1608025047783,"results":"23","hashOfConfig":"18"},{"size":1263,"mtime":1608122792113,"results":"24","hashOfConfig":"18"},{"size":2153,"mtime":1608194068825,"results":"25","hashOfConfig":"18"},{"size":377,"mtime":1608024714983,"results":"26","hashOfConfig":"18"},{"size":302,"mtime":1608124053128,"results":"27","hashOfConfig":"18"},{"size":840,"mtime":1608192189577,"results":"28","hashOfConfig":"18"},{"size":1658,"mtime":1608126411206,"results":"29","hashOfConfig":"18"},{"size":1483,"mtime":1608024524734,"results":"30","hashOfConfig":"18"},{"size":1241,"mtime":1608121790065,"results":"31","hashOfConfig":"18"},{"size":732,"mtime":1608121858718,"results":"32","hashOfConfig":"18"},{"size":617,"mtime":1608121475041,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"j4h2dx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/mate/Advanced/hangman/src/index.js",[],["71","72"],"/home/mate/Advanced/hangman/src/App.js",[],"/home/mate/Advanced/hangman/src/components/Game.js",[],"/home/mate/Advanced/hangman/src/components/Drawing.js",["73","74"],"import React, {useContext, useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {LettersContext} from '../context/LettersContext';\nimport {GameContext} from '../context/GameContext';\nimport { VocabularyContext } from '../context/VocabularyContext';\n\n\n\nconst Drawing = () => {\n\n    const {wrongLetters, isLastlyGuessedLetterWrong} = useContext(LettersContext);\n    const {isEndOfGame, setIsEndOfGame} = useContext(GameContext);\n    const {generatedWord} = useContext(VocabularyContext);\n    const [indexOfDrawingParts, setIndexOfDrawingParts] = useState(0);\n    const drawingParts = document.getElementsByClassName(\"drawing-part\");\n    \n\n    useEffect(() => {\n        if (!isEndOfGame && isLastlyGuessedLetterWrong) {\n            drawingParts[indexOfDrawingParts].classList.add(\"draw\");\n            if (drawingParts[indexOfDrawingParts + 1] === undefined) {\n                setIsEndOfGame(true);\n                // setIndexOfDrawingParts(0);\n                \n            } else {\n                setIndexOfDrawingParts(index => index + 1);\n            }\n        }\n    }, [wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame])\n\n    \n    // useEffect(() => {\n    //     for (let i = 0; i < drawingParts.length; i++) {\n    //         drawingParts[i].classList.remove(\"draw\");\n    //     }\n    //     setIndexOfDrawingParts(0);\n    // }, [generatedWord])\n\n    return <StyleWrapper id=\"drawing\" className=\"styled-div\">\n                <svg height=\"250\" width=\"100%\" id=\"drawing-parts\">\n                    <g id=\"gallows\">\n                        <line x1=\"10\" y1=\"230\" x2=\"270\" y2=\"230\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"230\" x2=\"100\" y2=\"20\" className=\"drawing-part\"/>\n                        <line x1=\"100\" y1=\"20\" x2=\"200\" y2=\"20\" className=\"drawing-part\"/>\n                        <line id=\"rope\" x1=\"200\" y1=\"20\" x2=\"200\" y2=\"60\" className=\"drawing-part\"/>\n                    </g>\n                    <g id=\"body\">\n                        <circle cx=\"200\" cy=\"80\" r=\"20\" stroke=\"white\" strokeWidth=\"4\" fill=\"white\" className=\"drawing-part\"/>\n                        <line x1=\"200\" y1=\"100\" x2=\"200\" y2=\"150\" className=\"drawing-part\"/>\n                        <line id=\"armL\" x1=\"200\" y1=\"120\" x2=\"170\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"armR\" x1=\"200\" y1=\"120\" x2=\"230\" y2=\"140\" className=\"drawing-part\"/>\n                        <line id=\"legL\" x1=\"200\" y1=\"150\" x2=\"180\" y2=\"190\" className=\"drawing-part\"/>\n                        <line id=\"legR\" x1=\"200\" y1=\"150\" x2=\"220\" y2=\"190\" className=\"drawing-part\"/>\n                    </g>\n                </svg>\n    </StyleWrapper>\n}\n\nexport default Drawing;\n\nconst StyleWrapper = styled.div`\n    flex: 5;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    margin: 10px 0;\n\n    svg {\n        margin: 0 auto;\n    }\n\n    line {\n    stroke: white;\n    stroke-width: 4;\n    }\n\n    .drawing-part {\n        visibility: hidden;\n    }\n\n    .draw {\n        visibility: visible;\n    }\n`;","/home/mate/Advanced/hangman/src/components/WrongLetters.js",[],"/home/mate/Advanced/hangman/src/components/CorrectLetters.js",["75"],"import React, {useContext, useEffect} from 'react';\nimport styled from 'styled-components';\nimport {LettersContext} from '../context/LettersContext';\nimport {GameContext} from '../context/GameContext';\nimport CorrectLetter from './CorrectLetter';\nimport {v4 as uuidv4} from 'uuid';\n\nconst CorrectLetters = () => {\n\n    const {correctLetters} = useContext(LettersContext);\n    const {setIsEndOfGame, setIsPlayerWon} = useContext(GameContext);\n\n    useEffect(() => {\n        if (!correctLetters.includes(null) && correctLetters.length !== 0) {\n            setIsEndOfGame(true);\n            setIsPlayerWon(true);\n        }\n    }, [correctLetters])    \n    \n\n    return (\n    <StyleWrapper id=\"correct-letters\" className=\"styled-div\">\n        {correctLetters.map(letter => \n            <CorrectLetter key={uuidv4()} letter={letter}/> \n            )}  \n    </StyleWrapper>\n    )\n}\n\nexport default CorrectLetters;\n\nconst StyleWrapper = styled.div`\n    flex: 4;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;","/home/mate/Advanced/hangman/src/components/GuessedLetter.js",[],"/home/mate/Advanced/hangman/src/context/LettersContext.js",["76"],"/home/mate/Advanced/hangman/src/components/CorrectLetter.js",[],["77","78"],"/home/mate/Advanced/hangman/src/components/WrongLetter.js",[],"/home/mate/Advanced/hangman/src/context/GameContext.js",[],"/home/mate/Advanced/hangman/src/components/GameEndingFeedback.js",["79"],"import React, {useContext, useEffect} from 'react';\nimport { GameContext } from '../context/GameContext';\nimport styled from 'styled-components';\n\nconst GameEndingFeedback = () => {\n\n\n    const {isEndOfGame, isPlayerWon, startNewGame} = useContext(GameContext);\n\n    useEffect(() => {\n        console.log(isPlayerWon);\n        console.log(isEndOfGame);\n    }, [isPlayerWon])\n\n    return (\n        <StyleWrapper id=\"game-ending-alert\">\n            {isEndOfGame && isPlayerWon &&\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            <strong>Well done! You won the game.</strong> \n                            <button onClick={e => startNewGame(e)} className=\"new-game-button\">Start new game</button>\n                        </div>\n            }\n            {isEndOfGame && !isPlayerWon &&\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            <strong>Oh snap! Game over.</strong>\n                            <button onClick={e => startNewGame(e)} className=\"new-game-button\">Start new game</button>\n                        </div>\n            }\n        </StyleWrapper>\n    );\n};\n\n\nexport default GameEndingFeedback;\n\nconst StyleWrapper = styled.div`\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 100;\n\n    .alert {\n        height: 150px;\n        width: 200px;\n        background-color: #503047;\n        padding: 20px 20px;\n        border: 3px solid;\n        border-radius: 20px;\n        border-color: white;\n    }\n\n    .new-game-button {\n        margin-top: 5px;\n        background-color: #383961;\n    }\n`;","/home/mate/Advanced/hangman/src/context/VocabularyContext.js",[],"/home/mate/Advanced/hangman/src/components/Vocabulary.js",[],"/home/mate/Advanced/hangman/src/components/Header.js",[],"/home/mate/Advanced/hangman/src/components/Content.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":13,"column":12,"nodeType":"86","messageId":"87","endLine":13,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":29,"column":8,"nodeType":"90","endLine":29,"endColumn":63,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":18,"column":8,"nodeType":"90","endLine":18,"endColumn":24,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"94","line":42,"column":8,"nodeType":"90","endLine":42,"endColumn":23,"suggestions":"95"},{"ruleId":"80","replacedBy":"96"},{"ruleId":"82","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"98","line":13,"column":8,"nodeType":"90","endLine":13,"endColumn":21,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'generatedWord' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'drawingParts', 'indexOfDrawingParts', and 'setIsEndOfGame'. Either include them or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has missing dependencies: 'setIsEndOfGame' and 'setIsPlayerWon'. Either include them or remove the dependency array.",["103"],"React Hook useEffect has a missing dependency: 'createArrayWithLengthOfGeneratedWordContainingNulls'. Either include it or remove the dependency array.",["104"],["100"],["101"],"React Hook useEffect has a missing dependency: 'isEndOfGame'. Either include it or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, drawingParts, indexOfDrawingParts, setIsEndOfGame]",{"range":"114","text":"115"},"Update the dependencies array to be: [correctLetters, setIsEndOfGame, setIsPlayerWon]",{"range":"116","text":"117"},"Update the dependencies array to be: [createArrayWithLengthOfGeneratedWordContainingNulls, generatedWord]",{"range":"118","text":"119"},"Update the dependencies array to be: [isEndOfGame, isPlayerWon]",{"range":"120","text":"121"},[1099,1154],"[wrongLetters, isLastlyGuessedLetterWrong, isEndOfGame, drawingParts, indexOfDrawingParts, setIsEndOfGame]",[627,643],"[correctLetters, setIsEndOfGame, setIsPlayerWon]",[1630,1645],"[createArrayWithLengthOfGeneratedWordContainingNulls, generatedWord]",[360,373],"[isEndOfGame, isPlayerWon]"]